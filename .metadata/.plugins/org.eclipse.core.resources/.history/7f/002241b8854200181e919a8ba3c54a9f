package ar.com.mateo.tpfinal.ui;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Frame;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import ar.com.mateo.tpfinal.jdbc.LocalesDAO;
import ar.com.mateo.tpfinal.jdbc.PersistenciaException;
import ar.com.mateo.tpfinal.jdbc.VendedorDAO;
import ar.com.mateo.tpfinal.model.Local;
import ar.com.mateo.tpfinal.model.Vendedor;

import java.awt.GridBagLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.GridBagConstraints;
import javax.swing.JTextField;
import java.awt.Insets;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class AgregraModificaLocal extends JDialog {

	private final JPanel contentPanel = new JPanel();
	private JTextField txtID;
	private JTextField txtLocal;
	private Local local;

	/**
	 * Launch the application.
	 */

	/**
	 * Create the dialog.
	 */
	public AgregraModificaLocal(Frame parent, boolean XBttn, boolean Alta, Local local) {
		super(parent, true);
		this.local = local;
		setBounds(100, 100, 450, 300);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		GridBagLayout gbl_contentPanel = new GridBagLayout();
		gbl_contentPanel.columnWidths = new int[] { 0, 0 };
		gbl_contentPanel.rowHeights = new int[] { 0, 0 };
		gbl_contentPanel.columnWeights = new double[] { 1.0, Double.MIN_VALUE };
		gbl_contentPanel.rowWeights = new double[] { 1.0, Double.MIN_VALUE };
		contentPanel.setLayout(gbl_contentPanel);
		{
			JPanel panel = new JPanel();
			GridBagConstraints gbc_panel = new GridBagConstraints();
			gbc_panel.fill = GridBagConstraints.BOTH;
			gbc_panel.gridx = 0;
			gbc_panel.gridy = 0;
			contentPanel.add(panel, gbc_panel);
			GridBagLayout gbl_panel = new GridBagLayout();
			gbl_panel.columnWidths = new int[] { 0, 0, 0, 0 };
			gbl_panel.rowHeights = new int[] { 0, 0, 0 };
			gbl_panel.columnWeights = new double[] { 0.0, 0.0, 1.0, Double.MIN_VALUE };
			gbl_panel.rowWeights = new double[] { 0.0, 0.0, Double.MIN_VALUE };
			panel.setLayout(gbl_panel);
			{
				JLabel lblI = new JLabel("ID");
				GridBagConstraints gbc_lblI = new GridBagConstraints();
				gbc_lblI.insets = new Insets(0, 0, 5, 5);
				gbc_lblI.anchor = GridBagConstraints.EAST;
				gbc_lblI.gridx = 0;
				gbc_lblI.gridy = 0;
				panel.add(lblI, gbc_lblI);
			}
			{
				txtID = new JTextField();
				GridBagConstraints gbc_txtID = new GridBagConstraints();
				gbc_txtID.insets = new Insets(0, 0, 5, 0);
				gbc_txtID.fill = GridBagConstraints.HORIZONTAL;
				gbc_txtID.gridx = 2;
				gbc_txtID.gridy = 0;
				panel.add(txtID, gbc_txtID);
				txtID.setColumns(10);
			}
			{
				JLabel lblLocal = new JLabel("Local");
				GridBagConstraints gbc_lblLocal = new GridBagConstraints();
				gbc_lblLocal.insets = new Insets(0, 0, 0, 5);
				gbc_lblLocal.gridx = 0;
				gbc_lblLocal.gridy = 1;
				panel.add(lblLocal, gbc_lblLocal);
			}
			{
				txtLocal = new JTextField();
				GridBagConstraints gbc_txtLocal = new GridBagConstraints();
				gbc_txtLocal.fill = GridBagConstraints.HORIZONTAL;
				gbc_txtLocal.gridx = 2;
				gbc_txtLocal.gridy = 1;
				panel.add(txtLocal, gbc_txtLocal);
				txtLocal.setColumns(10);
			}
		}
		{
			JPanel buttonPane = new JPanel();
			buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
			getContentPane().add(buttonPane, BorderLayout.SOUTH);
			{
				JButton okButton = new JButton("OK");
				okButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent arg0) {
						try {
							altaModifica(Alta);
						} catch (PersistenciaException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						dispose();
					}
				});
				okButton.setActionCommand("OK");
				buttonPane.add(okButton);
				getRootPane().setDefaultButton(okButton);
			}
			{
				JButton cancelButton = new JButton("Cancel");
				cancelButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent arg0) {
						dispose();
					}
				});
				cancelButton.setActionCommand("Cancel");
				buttonPane.add(cancelButton);
			}

		}
		init();
		cancelaCampos(XBttn);
	}

	private void init() {
		if (local == null) {
			setTitle("Nuevo Cliente");

		} else {
			setTitle("Edita Cliente");
			txtID.setText(local.getidLocales() + "");
			txtLocal.setText(local.getlocal());

		}
	}

	public void cancelaCampos(boolean XBttn) {
		if (XBttn == true) {
			txtID.setEditable(false);
			txtID.setEnabled(false);

		} else if (XBttn == false) {
			txtID.setEditable(true);
			txtID.setEnabled(true);
		}
		return;
	}

	private void altaModifica(boolean Alta) throws PersistenciaException {
		LocalesDAO lDAO = new LocalesDAO();
		try {
			if (Alta) {
				Local lc = new Local(Integer.parseInt(txtID.getText()), txtLocal.getText());
				lDAO.insert(lc);
				return;
			}

			else {

				Local lc = new Local(Integer.parseInt(txtID.getText()),txtLocal.getText());
				lDAO.update(lc);

				return;
			}
		} catch (

		PersistenciaException e) {
			JOptionPane.showMessageDialog(this, "Error de persistensia.", "Error", JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
			return;
		}
	}
		
	}

			
			
			
		
		
	
		
	


