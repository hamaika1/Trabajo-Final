package ar.com.mateo.PracticoFinal.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

import ar.com.mateo.PracticoFinal.Model.Parcial;

public class ParcialDAO {

	Conector conector;
	Connection conexion = null;
	Statement stmt = null;
	ResultSet rs = null;
	AlumnoDAO aDAO = new AlumnoDAO();
	MateriaDAO mDAO = new MateriaDAO();

	public Parcial save(Parcial p) {
		try {
			conector = new Conector();
			conexion = conector.getConexion();
			String sql = "INSERT INTO Parcial (idAlumno,idMateria,Parcial1,Parcial2,estadoRegularidad) VALUES (?,?,?,?,?)";
			PreparedStatement ps = conexion.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
			ps.setInt(1, p.getAlumno().getId());
			ps.setInt(2, p.getMateria().getId());
			ps.setInt(3, p.getParcial1());
			ps.setInt(4, p.getParcial2());
			ps.setString(5, p.getEstadoRegularidad());
			ps.execute();

			ResultSet tableKeys = ps.getGeneratedKeys();
			tableKeys.next();
			int autoGeneratedID = tableKeys.getInt(1);

			ps.close();
			conector.closeConexion();
			p.setId(autoGeneratedID);
			return p;

		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null,
					"Se produjo un error al querer insertar la nota en el alumno " + p.getAlumno().getNombre(), "Error",
					JOptionPane.ERROR_MESSAGE);
			return null;
		}

	}

	public Parcial load(int id) {
		try {
			conector = new Conector();
			conexion = conector.getConexion();
			String sql = "SELECT * FROM Parcial " + " WHERE Parcial.idParcial like ?";

			PreparedStatement ps = conexion.prepareStatement(sql);
			ps.setString(1, "%" + id + "%");
			ResultSet rs = ps.executeQuery();
			Parcial p = new Parcial();

			if (rs.next()) {
				p.setId(rs.getInt("Parcial.idParcial"));
				p.setAlumno(aDAO.load(rs.getInt("Parcial.idAlumno")));
				p.setMateria(mDAO.load(rs.getInt("Parcial.idMateria")));
				p.setParcial1(rs.getInt("Parcial.Parcial1"));
				p.setParcial2(rs.getInt("Parcial.Parcial2"));
				p.setEstadoRegularidad(rs.getString("Parcial.estadoRegularidad"));
			}
			rs.close();
			ps.close();
			conector.closeConexion();
			return p;
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "Se produjo un error al querer obtener el alumno especificado", "Error",
					JOptionPane.WARNING_MESSAGE);
		}
		return null;
	}

	public void update(Parcial p) {
		try {
			conector = new Conector();
			conexion = conector.getConexion();
			String sql = "UPDATE Parcial SET idAlumno = ?, idMateria = ?, Parcial1 = ?, Parcial2 = ?  WHERE idParcial = ?";
			PreparedStatement ps = conexion.prepareStatement(sql);
			ps.setInt(1, p.getAlumno().getId());
			ps.setInt(2, p.getMateria().getId());
			ps.setInt(3, p.getParcial1());
			ps.setInt(4, p.getParcial2());
			ps.setInt(5, p.getId());
			ps.execute();
			ps.close();
			conector.closeConexion();
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "Se produjo un error al querer actualizar un Alumno", "Error",
					JOptionPane.WARNING_MESSAGE);
		}
	}

	public void delete(Parcial p) {

		String sql = "DELETE FROM Parcial WHERE idParcial = ?";
		PreparedStatement ps;
		try {
			conector = new Conector();
			conexion = conector.getConexion();
			ps = conexion.prepareStatement(sql);
			ps.setInt(1, p.getId());
			ps.execute();
			ps.close();

		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "Se produjo un error al querer eliminar el Alumno especificada.",
					"Error", JOptionPane.ERROR_MESSAGE);
		} finally {
			conector.closeConexion();
		}
	}

	public List<Parcial> list() {

		List<Parcial> listaParciales = new ArrayList<Parcial>();
		String sql = "SELECT * FROM Parcial ORDER BY idAlumno";
		PreparedStatement ps;

		try {
			conector = new Conector();
			conexion = conector.getConexion();
			ps = conexion.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				Parcial p = new Parcial();
				p.setId(rs.getInt("Parcial.idParcial"));
				p.setAlumno(aDAO.load(rs.getInt("Parcial.idAlumno")));
				p.setMateria(mDAO.load(rs.getInt("Parcial.idMateria")));
				p.setParcial1(rs.getInt("Parcial.Parcial1"));
				p.setParcial2(rs.getInt("Parcial.Parcial2"));
				p.setEstadoRegularidad(rs.getString("Parcial.estadoRegularidad"));
				listaParciales.add(p);
			}
			rs.close();
			ps.close();
			return listaParciales;
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "Se produjo un error al querer acceder a los alumnos especificados",
					"Error", JOptionPane.ERROR_MESSAGE);
		} finally {
			conector.closeConexion();
		}

		return null;
	}

}
